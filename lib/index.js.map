{
  "version": 3,
  "sources": ["../src/types.ts", "../src/utils.ts", "../src/base/AemNode.ts", "../src/granite/GraniteNode.ts", "../src/granite/granitetypes/granite/GraniteContainer.ts", "../src/granite/granitetypes/granite/Container.ts", "../src/granite/granitetypes/granite/Dialog.ts", "../src/generate.ts"],
  "sourcesContent": ["export enum ResourceType {\n    TEXTFIELD = \"granite/ui/components/coral/foundation/form/textfield\",\n    CONTAINER = \"granite/ui/components/coral/foundation/container\",\n    CHECKBOX = \"granite/ui/components/coral/foundation/form/checkbox\",\n    PATH_FIELD = \"granite/ui/components/coral/foundation/form/pathfield\",\n    DATE_PICKER = \"granite/ui/components/coral/foundation/form/datepicker\",\n    FILE_UPLOAD = \"cq/gui/components/authoring/dialog/fileupload\",\n    NUMBER_FIELD = \"granite/ui/components/coral/foundation/form/numberfield\",\n    PATH_BROWSER = \"granite/ui/components/coral/foundation/form/pathbrowser\",\n    TEXTAREA = \"granite/ui/components/coral/foundation/form/textarea\",\n    SELECT = \"granite/ui/components/coral/foundation/form/select\",\n    FIELD = \"granite/ui/components/coral/foundation/form/field\",\n    MULTIFIELD = \"granite/ui/components/coral/foundation/form/multifield\",\n    RADIO_GROUP = \"granite/ui/components/coral/foundation/form/radiogroup\",\n    RICH_TEXT = \"cq/gui/components/authoring/dialog/richtext\",\n    ACCORDION = \"/libs/granite/ui/components/coral/foundation/accordion\",\n    ACTION_BAR = \"/libs/granite/ui/components/coral/foundation/actionbar\",\n    ALERT = \"/libs/granite/ui/components/coral/foundation/alert\",\n    ANCHOR_BUTTON = \"/libs/granite/ui/components/coral/foundation/anchorbutton\",\n    BUTTON = \"/libs/granite/ui/components/coral/foundation/button\",\n    COLUMN_VIEW = \"/libs/granite/ui/components/coral/foundation/columnview\",\n    CONTSYS = \"/libs/granite/ui/components/coral/foundation/contsys\",\n    CYCLE_BUTTON = \"/libs/granite/ui/components/coral/foundation/cyclebutton\",\n    DIALOG = \"/libs/granite/ui/components/coral/foundation/dialog\",\n    FIXED_COLUMNS = \"/libs/granite/ui/components/coral/foundation/fixedcolumns\",\n    HEADING = \"/libs/granite/ui/components/coral/foundation/heading\",\n    HYPERLINK = \"/libs/granite/ui/components/coral/foundation/hyperlink\",\n    INCLUDE = \"/libs/granite/ui/components/coral/foundation/include\",\n    INCLUDE_CLIENTLIBS = \"/libs/granite/ui/components/coral/foundation/includeclientlibs\",\n    LIST = \"/libs/granite/ui/components/coral/foundation/list\",\n    MASONRY = \"/libs/granite/ui/components/coral/foundation/masonry\",\n    META = \"/libs/granite/ui/components/coral/foundation/meta\",\n    PAGE = \"/libs/granite/ui/components/coral/foundation/page\",\n    PANEL = \"/libs/granite/ui/components/coral/foundation/panel\",\n    PICKER = \"/libs/granite/ui/components/coral/foundation/picker\",\n    POPOVER = \"/libs/granite/ui/components/coral/foundation/popover\",\n    PULLDOWN = \"/libs/granite/ui/components/coral/foundation/pulldown\",\n    TABLE = \"/libs/granite/ui/components/coral/foundation/table\",\n    TABS = \"/libs/granite/ui/components/coral/foundation/tabs\",\n    TEXT = \"/libs/granite/ui/components/coral/foundation/text\",\n    WELL = \"/libs/granite/ui/components/coral/foundation/well\",\n    WIZARD = \"/libs/granite/ui/components/coral/foundation/wizard\",\n    ADMIN_CONTENT_CHECKER = \"/libs/granite/ui/components/coral/foundation/admin/contentchecker\",\n    AUTHORIZABLE_PREFERENCES_FORM = \"/libs/granite/ui/components/coral/foundation/authorizable/preferencesform\",\n    COLLECTION_ACTION = \"/libs/granite/ui/components/coral/foundation/collection/action\",\n    COLLECTION_ACTION_LINK = \"/libs/granite/ui/components/coral/foundation/collection/actionlink\",\n    ACTION_FIELD = \"/libs/granite/ui/components/coral/foundation/form/actionfield\",\n    FORM_COLOR_FIELD = \"/libs/granite/ui/components/coral/foundation/form/colorfield\",\n    FORM_FIELD = \"/libs/granite/ui/components/coral/foundation/form/field\",\n    FORM_FIELD_SET = \"/libs/granite/ui/components/coral/foundation/form/fieldset\",\n    FORM_NESTED_CHECKBOX_LIST = \"/libs/granite/ui/components/coral/foundation/form/nestedcheckboxlist\",\n    FORM_RESPONSES_OPEN_PROMPT = \"/libs/granite/ui/components/coral/foundation/form/responses/openprompt\",\n    FORM_RESPONSES_REDIRECT = \"/libs/granite/ui/components/coral/foundation/form/responses/redirect\",\n    FORM_RESPONSES_RELOAD = \"/libs/granite/ui/components/coral/foundation/form/responses/reload\",\n    MODE_FORM = \"/libs/granite/ui/components/coral/foundation/mode/form\",\n    MODE_SWITCHER = \"/libs/granite/ui/components/coral/foundation/mode/switcher\",\n    PAGE_BODY = \"/libs/granite/ui/components/coral/foundation/page/body\",\n    PAGE_FAV_ICON = \"/libs/granite/ui/components/coral/foundation/page/favicon\",\n    PAGE_FRAGMENT = \"/libs/granite/ui/components/coral/foundation/page/fragment\",\n    PANEL_RAIL_PANEL = \"/libs/granite/ui/components/coral/foundation/panel/railpanel\",\n    RENDER_CONDITIONS_FEATURE = \"/libs/granite/ui/components/coral/foundation/renderconditions/feature\",\n    RENDER_CONDITIONS_PRIVILEGE = \"/libs/granite/ui/components/coral/foundation/renderconditions/privilege\",\n    RENDER_CONDITIONS_SIMPLE = \"/libs/granite/ui/components/coral/foundation/renderconditions/simple\",\n    WIZARD_LAZY_CONTAINER = \"/libs/granite/ui/components/coral/foundation/wizard/lazycontainer\",\n    WIZARD_LAZY_STEP = \"/libs/granite/ui/components/coral/foundation/wizard/lazystep\",\n}\n\nexport type Prop = {\n    field: string;\n    value: any;\n};\n\nexport type Attributes = Record<string, string>;\n", "import { Prop } from \"./types\";\n\nexport function formatXml(xml: string) {\n    let formatted = \"\";\n    const reg = /(>)(<)(\\/*)/g;\n    xml = xml.replace(reg, \"$1\\r\\n$2$3\");\n    let pad = 0;\n\n    xml.split(\"\\r\\n\").forEach(function (node) {\n        let indent = 0;\n        if (node.match(/.+<\\/\\w[^>]*>$/)) {\n            indent = 0;\n        } else if (node.match(/^<\\/\\w/)) {\n            if (pad != 0) {\n                pad -= 1;\n            }\n        } else if (node.match(/^<\\w[^>]*[^\\/]>.*$/)) {\n            indent = 1;\n        } else {\n            indent = 0;\n        }\n\n        let padding = \"\";\n        for (let i = 0; i < pad; i++) {\n            padding += \"  \";\n        }\n\n        formatted += padding + node + \"\\r\\n\";\n        pad += indent;\n    });\n\n    return formatted;\n}\n\nexport function getName(name: string) {\n    if (name.startsWith(\"./\")) {\n        return name;\n    }\n\n    return `./${name}`;\n}\n\nexport function aembool(b: boolean): string {\n    if (b) {\n        return \"{Boolean}true\";\n    }\n\n    return \"{Boolean}false\";\n}\n\nexport function prop(field: string, value: string): Prop {\n    return { field, value };\n}\n", "// import { RichText } from \"../granite/form\";\nimport { Prop } from \"../types\";\nimport { aembool, getName } from \"../utils\";\n\nexport interface BaseOptions {\n    tag?: string;\n}\n\nexport class AemNode {\n    readonly tag: string;\n    props: Prop[];\n    readonly children: AemNode[] = [];\n\n    constructor(tag: string, resourceType?: string, props?: Prop[]) {\n        this.props = props || [];\n        this.setProp(\"jcr:primaryType\", \"nt:unstructured\");\n        this.setProp(\"sling:resourceType\", resourceType);\n        this.tag = tag;\n    }\n\n    private addChild(child: AemNode) {\n        if (!this.children.find((c) => c.tag === child.tag)) {\n            this.children.push(child);\n        }\n    }\n\n    child(child: AemNode | AemNode[]): AemNode {\n        if (Array.isArray(child)) {\n            child.forEach((c) => this.addChild(c));\n        } else {\n            this.addChild(child);\n        }\n\n        return this;\n    }\n\n    items(children?: AemNode[]): AemNode {\n        const items = new AemNode(\"items\");\n        this.child(items);\n\n        children?.forEach((c) => items.child(c));\n\n        return this;\n    }\n\n    setProp(field: string, value: any) {\n        if (typeof value !== undefined) {\n            if (typeof value === \"boolean\") {\n                value = aembool(value);\n            } else if (field === \"name\") {\n                value = getName(value);\n            } else if (Array.isArray(value)) {\n                value = value.join(\", \");\n            }\n\n            this.removeProp(field);\n            this.props.push({ field, value });\n        }\n    }\n\n    removeProp(field: string) {\n        this.props = this.props.filter((prop) => prop.field !== field);\n    }\n\n    private renderXmlTree(tagName: string, attributes: Prop[], children: AemNode[], isRoot?: boolean) {\n        let attributesString = \"\";\n\n        for (const prop of attributes) {\n            if (!prop.value) {\n                continue;\n            }\n            attributesString += ` ${prop.field}=\"${prop.value}\"`;\n        }\n\n        let output = `<${tagName}${attributesString}`;\n\n        if (isRoot) {\n            output = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" + output;\n        }\n\n        if (children.length) {\n            output += \">\";\n\n            for (const child of children) {\n                output += `${child.xml(false)}`;\n            }\n            output += `</${tagName}>`;\n        } else {\n            output += \"/>\";\n        }\n\n        return output;\n    }\n\n    xml(isRoot?: boolean): string {\n        // if (this instanceof RichText) {\n        //     this.child(this.generateConfig());\n        // }\n\n        return this.renderXmlTree(this.tag, this.props, this.children, isRoot);\n    }\n}\n", "import { AemNode } from \"../base/AemNode\";\nimport { Prop } from \"../types\";\n\nexport interface GraniteOptions {\n    \"granite:class\"?: string;\n}\n\nexport class GraniteNode extends AemNode {\n    constructor(tag: string, resourceType?: string, props?: Prop[], options?: GraniteOptions) {\n        super(tag, resourceType);\n\n        for (const key in options) {\n            this.setProp(key, options[key as keyof GraniteOptions]);\n        }\n    }\n}\n", "import { ResourceType } from \"../../../types\";\nimport { GraniteNode } from \"../../GraniteNode\";\nimport { Container } from \"./Container\";\nimport { IDialog } from \"./Dialog\";\n\nexport type IGraniteContainer = Record<any, any>;\n\nexport class GraniteContainer<T> extends GraniteNode {\n    constructor(tag: string, options?: T, resourceType?: string, items?: GraniteNode[], datasource?: GraniteNode) {\n        super(tag, resourceType);\n\n        if (items && items.length > 0) {\n            this.items(items);\n        } else if (datasource) {\n            this.child(datasource);\n        }\n\n        for (const key in options) {\n            this.setProp(key, options[key as keyof T]);\n        }\n    }\n}\n\nclass Dialog extends GraniteContainer<IDialog> {\n    constructor(tag: string, options: IDialog) {\n        super(tag, options, ResourceType.DIALOG);\n    }\n}\n\nconst graniteNode = new Dialog(\"dialog\", {\n    \"jcr:title\": \"Properties\",\n});\n\nconsole.log(\"out\", graniteNode.xml());\n", "import { ResourceType } from \"../../../types\";\nimport { ICommonAttributes } from \"./CommonAttributes\";\nimport { GraniteContainer, IGraniteContainer } from \"./GraniteContainer\";\nimport { IRenderCondition } from \"./RenderCondition\";\n\ninterface IContainer extends ICommonAttributes, IRenderCondition, IGraniteContainer {\n    margin?: boolean;\n    maximized?: boolean;\n}\n\nexport function Container(tag: string, options?: IContainer): GraniteContainer<IContainer> {\n    return new GraniteContainer<IContainer>(tag, options, ResourceType.CONTAINER);\n}\n", "import { GraniteNode } from \"../../GraniteNode\";\nimport { ICommonAttributes } from \"./CommonAttributes\";\nimport { GraniteContainer, IGraniteContainer } from \"./GraniteContainer\";\nimport { IRenderCondition } from \"./RenderCondition\";\nimport { DialogVariant } from \"./LiteralTypes\";\nimport { ResourceType } from \"../../../types\";\n\nexport interface IDialog extends ICommonAttributes, IRenderCondition, IGraniteContainer {\n    \"jcr:title\": string;\n    closable?: boolean; // ='true'\n    variant?: DialogVariant;\n    footer?: GraniteNode | GraniteNode[];\n}\n\ninterface IDialogFooterItemParentconfig {\n    close?: boolean;\n}\n\n/* export class Dialog extends GraniteContainer<IDialog> {\n    constructor(tag: string, options: IDialog) {\n        super(tag, options, ResourceType.DIALOG);\n    }\n} */\n/* \nexport function Dialog(tag: string, options: IDialog): GraniteContainer<IDialog> {\n    return new GraniteContainer<IDialog>(tag, options, ResourceType.DIALOG);\n} */\n\nexport function DialogFooterItemParentconfig(\n    tag = \"parentConfig\",\n    options?: IDialogFooterItemParentconfig,\n): GraniteContainer<IDialogFooterItemParentconfig> {\n    return new GraniteContainer<IDialogFooterItemParentconfig>(tag, options);\n}\n", "import { AemNode } from \"./base/AemNode\";\nimport { formatXml } from \"./utils\";\nimport { existsSync, mkdirSync, writeFileSync } from \"fs\";\n\nexport function generate(dirPath: string, xml: AemNode) {\n    let output = xml.xml(true);\n    output = formatXml(output);\n\n    if (!existsSync(dirPath)) {\n        mkdirSync(dirPath, { recursive: true });\n    }\n    writeFileSync(`${dirPath}/.content.xml`, output, {});\n}\n"],
  "mappings": "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",
  "names": ["ResourceType", "formatXml", "xml", "formatted", "reg", "pad", "node", "indent", "padding", "i", "getName", "name", "aembool", "b", "prop", "field", "value", "AemNode", "tag", "resourceType", "props", "child", "c", "children", "items", "field", "value", "aembool", "getName", "prop", "tagName", "attributes", "isRoot", "attributesString", "output", "GraniteNode", "AemNode", "tag", "resourceType", "props", "options", "key", "GraniteContainer", "GraniteNode", "tag", "options", "resourceType", "items", "datasource", "key", "Dialog", "graniteNode", "Container", "tag", "options", "GraniteContainer", "DialogFooterItemParentconfig", "tag", "options", "GraniteContainer", "existsSync", "mkdirSync", "writeFileSync", "generate", "dirPath", "xml", "output", "formatXml"]
}
